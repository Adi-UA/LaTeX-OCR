#!/bin/bash

# Function to create a virtual environment and activate it
create_and_activate_venv() {
    echo "Creating virtual environment..."
    python3 -m venv venv
    source venv/bin/activate
}

# Function to install required packages
install_required_packages() {
    echo "Installing required packages..."
    pip3 install gdown wandb==0.15.12
    pip3 install -e .[train]
}

# Function to fetch data
fetch_data() {
    echo "Removing old data"
    rm -rf dataset images

    echo "Fetching data"
    mkdir -p dataset/data
    mkdir images

    gdown -O dataset/data/crohme.zip --id 13vjxGYrFCuYnwgDIUqkxsNGKk__D_sOM
    gdown -O dataset/data/pdf.zip --id 176PKaCUDWmTJdQwc-OfkO0y8t4gLsIvQ
    gdown -O dataset/data/pdfmath.txt --id 1QUjX6PFWPa-HBWdcY-7bA5TRVUnbyS1D
}

# Function to unzip data
unzip_and_split_data() {
    echo "Unzipping data"
    cd dataset/data
    unzip -q crohme.zip 
    unzip -q pdf.zip 

    # Split handwritten data into val set and train set
    cd images
    mkdir ../valimages
    cd ../../..
    python3 scripts/shuffle_data.py --config $config_file
}

# Function to combine files and generate a tokenizer
generate_tokenizer() {
    echo "Combining files and generating tokenizer"
    python3 scripts/create_train_equations_list.py
    python3 -m pix2tex.dataset.dataset --equations dataset/data/all_train_equations.txt --vocab-size 8000 --out custom/"$tokenizer_name"
}

# Function to reorganize data for training
reorganize_data_for_training() {
    echo Reorganizing training data
    python3 -m pix2tex.dataset.dataset -i dataset/data/images dataset/data/train -e dataset/data/CROHME_math.txt dataset/data/pdfmath.txt -o dataset/data/$train_pkl -t custom/$tokenizer_name
    
    echo Reogranizing validation data
    python3 -m pix2tex.dataset.dataset -i dataset/data/valimages dataset/data/val -e dataset/data/CROHME_math.txt dataset/data/pdfmath.txt -o dataset/data/$val_pkl -t custom/$tokenizer_name
}

# Function to start training
start_training() {
    echo "Training"
    python3 -m pix2tex.train --config $config_file
}

# Main script execution
config_file="custom/og_config.yaml"
experiment_name="og"
train_pkl="$experiment_name"_train.pkl
val_pkl="$experiment_name"_val.pkl
tokenizer_name="og_tokenizer.json"

create_and_activate_venv
install_required_packages
fetch_data
unzip_and_split_data
generate_tokenizer
reorganize_data_for_training
start_training
